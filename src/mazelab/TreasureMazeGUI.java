/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mazelab;

import apcscvm.CVMProgram;
import apcscvm.ViewCanvas;
import apcsmazegenerator.MazeGenerator;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author DSTIGANT
 */
public class TreasureMazeGUI extends javax.swing.JFrame
{
    private TreasureGameView view;
    private TreasureModel model;
    
    /**
     * Creates new form TreasureMazeGUI
     */
    public TreasureMazeGUI()
    {
        view = new TreasureGameView();
        model = new TreasureModel();
        initComponents();
        
        new CVMProgram( (ViewCanvas)viewCanvas, view, view, model ).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        numColumnsSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        algorithmComboBox = new javax.swing.JComboBox();
        numRowsSlider = new javax.swing.JSlider();
        startButton = new javax.swing.JButton();
        viewCanvas = new ViewCanvas<TreasureGameView, TreasureModel>(view, model);
        speedSlider = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        numColumnsSlider.setMaximum(50);
        numColumnsSlider.setMinimum(10);
        numColumnsSlider.setValue(20);
        numColumnsSlider.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                numColumnsSliderStateChanged(evt);
            }
        });

        jLabel1.setText("Maze Generation Algorithm:");

        algorithmComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kruskals", "Prims", "DivideAndConquer" }));
        algorithmComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                algorithmComboBoxItemStateChanged(evt);
            }
        });

        numRowsSlider.setMaximum(50);
        numRowsSlider.setMinimum(10);
        numRowsSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        numRowsSlider.setValue(20);
        numRowsSlider.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                numRowsSliderStateChanged(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                startButtonActionPerformed(evt);
            }
        });

        speedSlider.setMaximum(1000);
        speedSlider.setMinimum(1);
        speedSlider.setValue(100);
        speedSlider.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                speedSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(speedSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numRowsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numColumnsSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(viewCanvas, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(algorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(algorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(speedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numRowsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewCanvas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(numColumnsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_startButtonActionPerformed
    {//GEN-HEADEREND:event_startButtonActionPerformed
        // TODO add your handling code here:
        model.start();
        startButton.setEnabled( false );
    }//GEN-LAST:event_startButtonActionPerformed

    private void numRowsSliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_numRowsSliderStateChanged
    {//GEN-HEADEREND:event_numRowsSliderStateChanged
        // TODO add your handling code here:
        createNewMaze();
    }//GEN-LAST:event_numRowsSliderStateChanged

    private void numColumnsSliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_numColumnsSliderStateChanged
    {//GEN-HEADEREND:event_numColumnsSliderStateChanged
        // TODO add your handling code here:
        createNewMaze();
    }//GEN-LAST:event_numColumnsSliderStateChanged

    private void algorithmComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_algorithmComboBoxItemStateChanged
    {//GEN-HEADEREND:event_algorithmComboBoxItemStateChanged
        // TODO add your handling code here:
        createNewMaze();
    }//GEN-LAST:event_algorithmComboBoxItemStateChanged

    private void speedSliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_speedSliderStateChanged
    {//GEN-HEADEREND:event_speedSliderStateChanged
        // TODO add your handling code here:
        view.setStepDuration( speedSlider.getValue() );
    }//GEN-LAST:event_speedSliderStateChanged

    private void createNewMaze()
    {
        try
        {
            startButton.setEnabled( true );
            String algCls = algorithmComboBox.getSelectedItem().toString();
            algCls = "apcsmazegenerator." + algCls + "Algorithm";
            Class genCls = Class.forName( algCls );
            Constructor genClsCon = genCls.getConstructor();
            MazeGenerator gen = (MazeGenerator)(genClsCon.newInstance() );
            model.reset( numRowsSlider.getValue(), numColumnsSlider.getValue(), gen );
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(TreasureMazeGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchMethodException ex)
        {
            Logger.getLogger(TreasureMazeGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SecurityException ex)
        {
            Logger.getLogger(TreasureMazeGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            Logger.getLogger(TreasureMazeGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            Logger.getLogger(TreasureMazeGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalArgumentException ex)
        {
            Logger.getLogger(TreasureMazeGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvocationTargetException ex)
        {
            Logger.getLogger(TreasureMazeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(TreasureMazeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(TreasureMazeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(TreasureMazeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(TreasureMazeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new TreasureMazeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox algorithmComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSlider numColumnsSlider;
    private javax.swing.JSlider numRowsSlider;
    private javax.swing.JSlider speedSlider;
    private javax.swing.JButton startButton;
    private java.awt.Canvas viewCanvas;
    // End of variables declaration//GEN-END:variables
}
